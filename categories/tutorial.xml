<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>tin_nqn (tutorial)</title><link>http://mgaitan.github.io/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://mgaitan.github.io/categories/tutorial.xml"></atom:link><language>es</language><lastBuildDate>Mon, 14 Sep 2015 15:03:59 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Deploy de Django con Circus, Chaussette y Nginx</title><link>http://mgaitan.github.io/posts/deploy-de-django-con-circus-chaussette-nginx.html</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;div&gt;&lt;p&gt;Aunque hay un pequeño mito al respecto, poner en producción una aplicación web hecha en Python no es tan complejo. Esa facilidad se debe a la estandarización de la pasarela &lt;a class="reference external" href="http://legacy.python.org/dev/peps/pep-3333/"&gt;WSGI&lt;/a&gt;, que define cómo se comunica (o se debería comunicar) una "app" (sea hecha con un framework o no) con un servidor web.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Si bien Nginx, el servidor web que está &lt;a class="reference external" href="http://w3techs.com/blog/entry/nginx_just_became_the_most_used_web_server_among_the_top_1000_websites"&gt;desplazando a Apache como el más popular&lt;/a&gt; tiene &lt;a class="reference external" href="http://wiki.nginx.org/NgxWSGIModule"&gt;un módulo&lt;/a&gt; que implementa el estándar WSGI de manera nativa, la arquitectura más típica es utilizarlo como &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Reverse_proxy"&gt;proxy reverso&lt;/a&gt;, conectado a un servidor WSGI especializado como &lt;a class="reference external" href="http://gunicorn.org/"&gt;Gunicorn&lt;/a&gt; que interactua con la aplicación web (posiblemente a través de multiples instancias o &lt;em&gt;workers&lt;/em&gt;). Como queremos que nuestra app funcione permanentemente, el proceso WSGI y otros que sean necesarios (por ejemplo Redis) se demonizan de manera que sepan restaurarse automáticamente si mueren y sea posible monitorearlos: para eso suele usarse &lt;a class="reference external" href="http://supervisord.org/"&gt;supervisor&lt;/a&gt;.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="https://raw.githubusercontent.com/mozilla-services/circus/dff6cf3a348fecc0b58bd08cae91b1508aed14c2/docs/source/classical-stack.png" src="https://raw.githubusercontent.com/mozilla-services/circus/dff6cf3a348fecc0b58bd08cae91b1508aed14c2/docs/source/classical-stack.png"&gt;
&lt;p class="caption"&gt;La arquitectura de deployment más común para una aplicación web Python&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Si bien esta arquitectura está bastamente probada, hay una opción mejor.&lt;/p&gt;
&lt;img alt="https://circus.readthedocs.org/en/0.11.1/_images/circus-medium.png" class="align-center" src="https://circus.readthedocs.org/en/0.11.1/_images/circus-medium.png"&gt;
&lt;div class="section" id="el-circo-y-el-soquete"&gt;
&lt;h2&gt;El circo y el soquete&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://circus.readthedocs.org/"&gt;Circus&lt;/a&gt; y &lt;a class="reference external" href="http://chaussette.readthedocs.org/"&gt;Chaussette&lt;/a&gt; son proyectos desarrollados por &lt;a class="reference external" href="http://ziade.org/"&gt;Tarek Ziadé&lt;/a&gt; y el equipo de &lt;a class="reference external" href="https://blog.mozilla.org/services/"&gt;Mozilla Sevices&lt;/a&gt;.&lt;/p&gt;
&lt;div class="tip"&gt;
&lt;p class="first admonition-title"&gt;Tip&lt;/p&gt;
&lt;p class="last"&gt;Tarek es un pythonista francés, core committer de Python y muchos proyectos relacionados. Recibió el &lt;a class="reference external" href="https://www.python.org/community/awards/psf-awards/#april-2011"&gt;reconocimiento de la PSF&lt;/a&gt; por sus aportes y es autor del gran libro &lt;a class="reference external" href="http://www.packtpub.com/expert-python-programming/book"&gt;Expert Python Programming&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Una arquitectura de producción análoga a la descripta arriba, pero basada en Circus, se ve así:&lt;/p&gt;
&lt;img alt="https://raw.githubusercontent.com/mozilla-services/circus/dff6cf3a348fecc0b58bd08cae91b1508aed14c2/docs/source/circus-stack.png" class="align-center" src="https://raw.githubusercontent.com/mozilla-services/circus/dff6cf3a348fecc0b58bd08cae91b1508aed14c2/docs/source/circus-stack.png"&gt;
&lt;p&gt;Circus maneja procesos demonizados igual que Supervisor, pero además puede bindear &lt;strong&gt;sockets&lt;/strong&gt; y manejarlos de la misma manera. Este desacople de la gestión de sockets del webserver WSGI permite muchas posibilidades, tanto en la gestión como en la escalabilidad de la arquitectura.&lt;/p&gt;
&lt;p&gt;La capa WSGI en este esquema la aporta Chaussette, que tiene la particularidad que, en vez de abrir un socket nuevo, utiliza el que Circus abrió (y controla) para el worker. Además, aunque trae una implementación de WSGI &lt;em&gt;built-in&lt;/em&gt;, &lt;a class="reference external" href="http://chaussette.readthedocs.org/en/latest/index.html#backends"&gt;puede usar muchos backends&lt;/a&gt; más eficientes o con características particulares como &lt;a class="reference external" href="http://meinheld.org/"&gt;meinheld&lt;/a&gt;, &lt;a class="reference external" href="http://www.gevent.org/"&gt;gevent&lt;/a&gt;, &lt;a class="reference external" href="http://gevent-socketio.readthedocs.org/en/latest/"&gt;gevent-socketio&lt;/a&gt;, entre muchos otros.&lt;/p&gt;
&lt;p&gt;A diferencia de Supervisor que se basa en el protocolo XML-RPC para inspeccionar los procesos que controla, Circus utiliza un canal pub/sub basado en el mucho más moderno &lt;a class="reference external" href="http://zeromq.org/"&gt;ZeroMQ&lt;/a&gt; (lo mismo que usa IPython Notebook) que permite un monitoreo realtime y una &lt;a class="reference external" href="https://circus.readthedocs.org/en/0.11.1/for-devs/#extending-circus"&gt;API de plugins&lt;/a&gt; mucho más simple. Otra diferencia, nada menor, es que &lt;strong&gt;Circus funciona con Python 2 o 3&lt;/strong&gt; (supervisor no es compatible con Python 3).&lt;/p&gt;
&lt;p&gt;Y de yapa: Circus se puede usar como una &lt;a class="reference external" href="https://circus.readthedocs.org/en/0.11.1/for-devs/library/"&gt;biblioteca de muy alto nivel&lt;/a&gt;  para la gestión no bloqueante de procesos. Se puede pensar con un wrapper de &lt;tt class="docutils literal"&gt;subprocess&lt;/tt&gt; y/o &lt;tt class="docutils literal"&gt;multiprocess&lt;/tt&gt;, que aporta información de monitoreo y estadísticas, control de flujo, una &lt;a class="reference external" href="https://circus.readthedocs.org/en/0.11.1/for-devs/writing-hooks/"&gt;capa de señales (hooks)&lt;/a&gt; muy completa y más.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="desplegando-django"&gt;
&lt;h2&gt;Desplegando Django&lt;/h2&gt;
&lt;p&gt;Para ejemplificar, voy utilizar un proyecto Django que estoy desarrollando (muy lentamente): &lt;a class="reference external" href="https://github.com/mgaitan/nikolahub"&gt;nikolahub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Circus se configura con un archivo con formato &lt;tt class="docutils literal"&gt;.ini&lt;/tt&gt;. El mio, que bauticé &lt;tt class="docutils literal"&gt;circus.ini&lt;/tt&gt; quedó así:&lt;/p&gt;
&lt;pre class="code ini"&gt;&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;[circus]&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-2"&gt;&lt;/a&gt;&lt;span class="na"&gt;check_delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;5&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-3"&gt;&lt;/a&gt;&lt;span class="na"&gt;endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;tcp://127.0.0.1:5555&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-4"&gt;&lt;/a&gt;&lt;span class="na"&gt;pubsub_endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;tcp://127.0.0.1:5556&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-5"&gt;&lt;/a&gt;&lt;span class="na"&gt;stats_endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;tcp://127.0.0.1:5557&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;[socket:nikolahub]&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-8"&gt;&lt;/a&gt;&lt;span class="na"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;127.0.0.1&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-9"&gt;&lt;/a&gt;&lt;span class="na"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;8080&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;[watcher:nikolahub]&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-12"&gt;&lt;/a&gt;&lt;span class="na"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/virtualenvs/nikolahub/bin/chaussette --fd $(circus.sockets.nikolahub) nikolahub.wsgi.application&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-13"&gt;&lt;/a&gt;&lt;span class="na"&gt;use_sockets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;True&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-14"&gt;&lt;/a&gt;&lt;span class="na"&gt;numprocesses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;3&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-16"&gt;&lt;/a&gt;&lt;span class="k"&gt;[env:nikolahub]&lt;/span&gt;
&lt;a name="rest_code_edf96b0af2474fd2848232a88d46f53f-17"&gt;&lt;/a&gt;&lt;span class="na"&gt;PYTHONPATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/projects/nikolahub&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;La sección &lt;tt class="docutils literal"&gt;watcher&lt;/tt&gt; indica lanza el comando a controlar, en este caso levantando 3 workers de la aplicación -django.  Notar que como tengo instalado Chaussette dentro del virtualenv, uso el path absoluto al ejecutable. El fragmento &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--fd&lt;/span&gt; $(circus.sockets.nikolahub)&lt;/tt&gt; se expande implícitamente asignando el pid que obtuvo el fork (el proceso hijo) de circus.&lt;/p&gt;
&lt;p&gt;Si quisieramos usar otro servidor web, sólo hay que indicar cual con el parámetro &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--backend&lt;/span&gt;&lt;/tt&gt; Por ejemplo:&lt;/p&gt;
&lt;pre class="code ini"&gt;&lt;a name="rest_code_f80ab18a369c445bb492cbbf7293ae4a-1"&gt;&lt;/a&gt;&lt;span class="na"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/virtualenvs/nikolahub/bin/chaussette --backend gevent --fd $(circus.sockets.nikolahub) nikolahub.wsgi.application&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Podemos probar si todo funciona:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;nikolahub&lt;span class="o"&gt;)&lt;/span&gt;tin@morochita:&lt;span class="nv"&gt;$ &lt;/span&gt;circusd circus.ini
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-2"&gt;&lt;/a&gt;2014-06-12 04:36:16 circus&lt;span class="o"&gt;[&lt;/span&gt;1141&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Starting master on pid 1141
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-3"&gt;&lt;/a&gt;2014-06-12 04:36:16 circus&lt;span class="o"&gt;[&lt;/span&gt;1141&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; sockets started
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-4"&gt;&lt;/a&gt;2014-06-12 04:36:16 circus&lt;span class="o"&gt;[&lt;/span&gt;1141&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Arbiter now waiting &lt;span class="k"&gt;for&lt;/span&gt; commands
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-5"&gt;&lt;/a&gt;2014-06-12 04:36:16 circus&lt;span class="o"&gt;[&lt;/span&gt;1141&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; nikolahub started
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-6"&gt;&lt;/a&gt;2014-06-12 04:36:16 circus&lt;span class="o"&gt;[&lt;/span&gt;1141&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; circusd-stats started
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-7"&gt;&lt;/a&gt;2014-06-12 04:36:17 circus&lt;span class="o"&gt;[&lt;/span&gt;1150&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Starting the stats streamer
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-8"&gt;&lt;/a&gt;2014-06-12 04:36:17 &lt;span class="o"&gt;[&lt;/span&gt;1149&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Application is &amp;lt;django.core.handlers.wsgi.WSGIHandler object at 0xa06f60c&amp;gt;
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-9"&gt;&lt;/a&gt;2014-06-12 04:36:17 &lt;span class="o"&gt;[&lt;/span&gt;1149&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Serving on fd://5
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-10"&gt;&lt;/a&gt;2014-06-12 04:36:17 &lt;span class="o"&gt;[&lt;/span&gt;1149&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using &amp;lt;class chaussette.backend._wsgiref.ChaussetteServer at 0x9f2d6ec&amp;gt; as a backend
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-11"&gt;&lt;/a&gt;2014-06-12 04:36:17 &lt;span class="o"&gt;[&lt;/span&gt;1148&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Application is &amp;lt;django.core.handlers.wsgi.WSGIHandler object at 0x939b60c&amp;gt;
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-12"&gt;&lt;/a&gt;2014-06-12 04:36:17 &lt;span class="o"&gt;[&lt;/span&gt;1148&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Serving on fd://5
&lt;a name="rest_code_0f154359c0194d9b9aa5e4b6013202f2-13"&gt;&lt;/a&gt;2014-06-12 04:36:17 &lt;span class="o"&gt;[&lt;/span&gt;1148&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt; Using &amp;lt;class chaussette.backend._wsgiref.ChaussetteServer at 0x92596ec&amp;gt; as a backend
&lt;/pre&gt;&lt;p&gt;Tendremos la aplicación servida en el puerto 8080 de localhost. Demonizarlo es sólo un flag:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_a4ce6d68029c428a8aa9e984a5241cd6-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;nikolahub&lt;span class="o"&gt;)&lt;/span&gt;tin@morochita:&lt;span class="nv"&gt;$ &lt;/span&gt;circud --daemon circus.ini
&lt;/pre&gt;&lt;p&gt;Para implementar nginx como proxy reverso armé un archivo &lt;tt class="docutils literal"&gt;nginx.conf&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code javascript"&gt;&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-1"&gt;&lt;/a&gt;&lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-2"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-3"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;server_name&lt;/span&gt; &lt;span class="nx"&gt;nikolahub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nqnwebs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-5"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kr"&gt;static&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-6"&gt;&lt;/a&gt;            &lt;span class="nx"&gt;alias&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;nikolahub&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kr"&gt;static&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-7"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-9"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-10"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;alias&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;nikolahub&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-13"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-14"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;proxy_pass&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:8080/;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-15"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;proxy_pass_header&lt;/span&gt; &lt;span class="nx"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-16"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;proxy_set_header&lt;/span&gt; &lt;span class="nx"&gt;Host&lt;/span&gt; &lt;span class="nx"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-17"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;proxy_redirect&lt;/span&gt; &lt;span class="nx"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-18"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;proxy_set_header&lt;/span&gt; &lt;span class="nx"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Real&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;IP&lt;/span&gt; &lt;span class="nx"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-19"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;proxy_set_header&lt;/span&gt; &lt;span class="nx"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;Scheme&lt;/span&gt; &lt;span class="nx"&gt;$scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-20"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;proxy_connect_timeout&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-21"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;proxy_send_timeout&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-22"&gt;&lt;/a&gt;        &lt;span class="nx"&gt;proxy_read_timeout&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-23"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_8b5314a913f54c73bd88838dce211a0a-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Luego agregamos el sitio:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_23b5f6dd5b6f45f9899af78018292861-1"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ln -s /etc/nginx/sites-available/nikolahub nginx.conf
&lt;a name="rest_code_23b5f6dd5b6f45f9899af78018292861-2"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ln -s /etc/nginx/sites-enable/nikolahub nginx.conf
&lt;a name="rest_code_23b5f6dd5b6f45f9899af78018292861-3"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo service nginx restart
&lt;/pre&gt;&lt;img alt="http://upload.wikimedia.org/wikipedia/commons/thumb/6/67/Reverse_proxy_h2g2bob.svg/400px-Reverse_proxy_h2g2bob.svg.png" class="align-right" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/67/Reverse_proxy_h2g2bob.svg/400px-Reverse_proxy_h2g2bob.svg.png"&gt;
&lt;p&gt;Esto pone a nginx como "frontend" de la aplicación, sirviendo los directorios con contenido estático y pasando el resto de las peticiones al puerto 8080 que administra Circus.&lt;/p&gt;
&lt;p&gt;Ya tenemos nuestro sitio en producción.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="el-dueno-del-circo-y-los-monitos"&gt;
&lt;h2&gt;El dueño del circo y los monitos&lt;/h2&gt;
&lt;p&gt;De ahora en más, podremos usar las herramientas que provee Circus.&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;circusctl&lt;/tt&gt; es el dueño del circo. Puede parar, reiniciar, cambiar la cantidad de workers, abrir una consola ipython para interactuar o inspeccionar y mucho mas. Se puede usar como subcomandos (&lt;tt class="docutils literal"&gt;circusctl &amp;lt;subcmd&amp;gt; &amp;lt;watcher&amp;gt;&lt;/tt&gt;) o usar la consola interactiva.&lt;/p&gt;
&lt;p&gt;Por ejemplo, si quisiera ver cuantos procesos workers tengo y agregar uno más, podría hacer así:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_85a4b52084b14b70b5bbee4242345c6d-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;nikolahub&lt;span class="o"&gt;)&lt;/span&gt;tin@morochita:&lt;span class="nv"&gt;$ &lt;/span&gt;circusctl numprocesses nikolahub
&lt;a name="rest_code_85a4b52084b14b70b5bbee4242345c6d-2"&gt;&lt;/a&gt;3
&lt;a name="rest_code_85a4b52084b14b70b5bbee4242345c6d-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;nikolahub&lt;span class="o"&gt;)&lt;/span&gt;tin@morochita:&lt;span class="nv"&gt;$ &lt;/span&gt;circusctl incr nikolahub
&lt;a name="rest_code_85a4b52084b14b70b5bbee4242345c6d-4"&gt;&lt;/a&gt;ok
&lt;a name="rest_code_85a4b52084b14b70b5bbee4242345c6d-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;nikolahub&lt;span class="o"&gt;)&lt;/span&gt;tin@morochita:&lt;span class="nv"&gt;$ &lt;/span&gt;circusctl numprocesses nikolahub
&lt;a name="rest_code_85a4b52084b14b70b5bbee4242345c6d-6"&gt;&lt;/a&gt;4
&lt;/pre&gt;&lt;p&gt;Lo mismo y más se puede hacer desde una consola IPython.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;nikolahub&lt;span class="o"&gt;)&lt;/span&gt;tin@morochita:&lt;span class="nv"&gt;$ &lt;/span&gt;circusctl ipython
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-2"&gt;&lt;/a&gt;Python 2.7.4 &lt;span class="o"&gt;(&lt;/span&gt;default, Apr &lt;span class="m"&gt;19&lt;/span&gt; 2013, 18:32:33&lt;span class="o"&gt;)&lt;/span&gt;
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-3"&gt;&lt;/a&gt;Type &lt;span class="s2"&gt;"copyright"&lt;/span&gt;, &lt;span class="s2"&gt;"credits"&lt;/span&gt; or &lt;span class="s2"&gt;"license"&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-5"&gt;&lt;/a&gt;IPython 2.1.0 -- An enhanced Interactive Python.
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-6"&gt;&lt;/a&gt;?         -&amp;gt; Introduction and overview of IPython&lt;span class="s1"&gt;'s features.&lt;/span&gt;
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-7"&gt;&lt;/a&gt;&lt;span class="s1"&gt;%quickref -&amp;gt; Quick reference.&lt;/span&gt;
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-8"&gt;&lt;/a&gt;&lt;span class="s1"&gt;help      -&amp;gt; Python'&lt;/span&gt;s own &lt;span class="nb"&gt;help &lt;/span&gt;system.
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-9"&gt;&lt;/a&gt;object?   -&amp;gt; Details about &lt;span class="s1"&gt;'object'&lt;/span&gt;, use &lt;span class="s1"&gt;'object??'&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; extra details.
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-11"&gt;&lt;/a&gt;In &lt;span class="o"&gt;[&lt;/span&gt;1&lt;span class="o"&gt;]&lt;/span&gt;: arbiter.numprocesses&lt;span class="o"&gt;()&lt;/span&gt;
&lt;a name="rest_code_67955686890140a6bbe39e99c98be765-12"&gt;&lt;/a&gt;Out&lt;span class="o"&gt;[&lt;/span&gt;1&lt;span class="o"&gt;]&lt;/span&gt;: 4
&lt;/pre&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;circus-top&lt;/span&gt;&lt;/tt&gt; es un monitor realtime, estilo top. Escucha las estadísticas
que produce &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;circusd-stats&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_10cb1d89500a4550a6ce1f1097e37483-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;(&lt;/span&gt;nikolahub&lt;span class="o"&gt;)&lt;/span&gt;tin@morochita:&lt;span class="nv"&gt;$ &lt;/span&gt;circus-top
&lt;/pre&gt;&lt;div class="figure"&gt;
&lt;img alt="/images/circus-top.png" src="http://mgaitan.github.io/images/circus-top.png"&gt;
&lt;p class="caption"&gt;circus-top en acción. Muestra los procesos watcher y los recursos que cosumen.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Todo esto puede verse y manejarse cómodamente a través de &lt;a class="reference external" href="https://circus.readthedocs.org/en/0.11.1/for-ops/circusweb/"&gt;circus-web&lt;/a&gt;, un dashboard web que permite monitorear y
administrar circus, con gráficos realtime y muy fácil de usar.&lt;/p&gt;
&lt;img alt="https://circus.readthedocs.org/en/0.11.1/_images/web-watchers.png" class="align-center" src="https://circus.readthedocs.org/en/0.11.1/_images/web-watchers.png" style="width: 100%;"&gt;
&lt;p&gt;Desde las últimas versiones, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;circus-web&lt;/span&gt;&lt;/tt&gt; se refactorizó para basarla en &lt;a class="reference external" href="http://www.tornadoweb.org"&gt;Tornado&lt;/a&gt; (originalmente usaba &lt;a class="reference external" href="http://bottlepy.org/"&gt;bottle&lt;/a&gt;) y hay que instalarlo aparte.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_88e47569db64404b8a2cde87cd54161e-1"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install circus-web
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="conclusiones"&gt;
&lt;h2&gt;Conclusiones&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://circus.readthedocs.org/"&gt;Circus&lt;/a&gt; es una herramienta que simplifica el stack de deployment de una aplicación web WSGI.
La API de alto nivel, una arquitectura mucho más moderna y simple y el aval de ser desarrollada (y usada exhaustivamente) por Mozilla, son avales poderosos para probarla.&lt;/p&gt;
&lt;p&gt;Como &lt;a class="reference external" href="http://textosypretextos.com.ar/Bienvenidos-al-show"&gt;escribió el Marcos Luc&lt;/a&gt; &lt;em&gt;"la función ya debería empezar (...) Bueno nena, buena suerte, cada vez la red te teme más..."&lt;/em&gt;&lt;/p&gt;
&lt;iframe width="709" height="390" src="//www.youtube.com/embed/AhfUfjLpNvI" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;</description><category>circus</category><category>devop</category><category>django</category><category>python</category><category>tutorial</category><guid>http://mgaitan.github.io/posts/deploy-de-django-con-circus-chaussette-nginx.html</guid><pubDate>Thu, 12 Jun 2014 15:45:13 GMT</pubDate></item><item><title>Creando un nuevo proyecto Python</title><link>http://mgaitan.github.io/posts/creando-un-nuevo-proyecto-python.html</link><dc:creator>Martín Gaitán</dc:creator><description>&lt;div&gt;&lt;p&gt;¿Así que querés comenzar un nuevo proyecto usando Python?
¡Felicitaciones! ¿Querés que tenga la estructura recomendada para
proyectos modernos? ¿Querés que sea instalable fácilmente? ¿Querés que
no se te arme lio de dependencias que colisionan con las de otros
proyectos ? Bien, te propongo esta receta.&lt;/p&gt;
&lt;div class="section" id="las-herramientas"&gt;
&lt;h2&gt;Las herramientas&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.virtualenv.org"&gt;Virtualenv&lt;/a&gt;:  es una herramienta para aislar tu entorno de
desarrollo python. Es muy pero muy útil para evitar conflictos entre las
dependencias de tus distintos proyectos.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.doughellmann.com/projects/virtualenvwrapper/"&gt;virtualenvwrapper&lt;/a&gt;: es un conjunto de extensiones que
hacen la vida del usuario &lt;em&gt;virtualenv&lt;/em&gt; aun más feliz, permitiendo crear
y borrar entornos virtuales, asociarlos a un proyecto, automatizar
tareas al activar o desactivar uno, etc.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pip-installer.org"&gt;pip&lt;/a&gt;: es la herramienta moderna, correcta y recomendada
para administrar los paquetes python instalados en tu
sistema/virtualenv. Es un reemplazo de &lt;em&gt;easy_install&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://packages.python.org/distribute/"&gt;Distribute&lt;/a&gt;: es la herramienta moderna y recomendada para
distribuir tu paquete python. Es un fork de &lt;em&gt;setuptools&lt;/em&gt; (que es, a su
vez, una mejora sobre el módulo estándar &lt;em&gt;distutils&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/stumitchell/skeleton"&gt;skeleton&lt;/a&gt; es una herramienta que define &lt;em&gt;plantillas&lt;/em&gt;
para iniciar un proyecto, generando la estructura básica necesaria. Es
similar a &lt;a class="reference external" href="http://python.org.ar/pyar/PasteScript"&gt;PasteScript&lt;/a&gt; pero enfocado en esta
tarea concreta, sin dependencias y compatible con Python 3.x&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="la-receta"&gt;
&lt;h2&gt;La receta&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Instalá pip:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo apt-get install python-pip
&lt;/pre&gt;
&lt;p&gt;o bien directamente:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Instalá virtualenwrapper y skeleton:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo pip install virtualenwrapper
$ sudo pip install git+git://github.com/stumitchell/skeleton.git#egg=skeleton
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Notar que &lt;em&gt;skeleton&lt;/em&gt; se está instalando desde un &lt;em&gt;fork&lt;/em&gt; del proyecto
original (aparentemente desmantenida), que resuelve bugs importantes&lt;/p&gt;
&lt;/div&gt;
&lt;ol class="arabic" start="3"&gt;
&lt;li&gt;&lt;p class="first"&gt;Configurá virtualenvwrapper&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_71985f0474914deea9740f81792b9e72-1"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.virtualenvs           &lt;span class="c"&gt;# acá se van a guardar tus entornos virtuales&lt;/span&gt;
&lt;a name="rest_code_71985f0474914deea9740f81792b9e72-2"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/proyectos              &lt;span class="c"&gt;# acá se van a guardar tus proyectos&lt;/span&gt;
&lt;a name="rest_code_71985f0474914deea9740f81792b9e72-3"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.pip_download_cache     &lt;span class="c"&gt;# para no bajar paquetes cada vez&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Luego editá tu &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt; agregando las siguientes líneas&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_a3dcace178ec44169b097a37992f6232-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.virtualenvs
&lt;a name="rest_code_a3dcace178ec44169b097a37992f6232-2"&gt;&lt;/a&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PROJECT_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/proyectos
&lt;a name="rest_code_a3dcace178ec44169b097a37992f6232-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VIRTUALENV_DISTRIBUTE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;a name="rest_code_a3dcace178ec44169b097a37992f6232-4"&gt;&lt;/a&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PIP_DOWNLOAD_CACHE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.pip_download_cache
&lt;a name="rest_code_a3dcace178ec44169b097a37992f6232-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper.sh
&lt;/pre&gt;&lt;p&gt;y recargá tus cambios:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ source ~/.bashrc
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Inicializá tu proyecto. Por ejemplo el proyecto &lt;em&gt;zaraza&lt;/em&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ mkproject -t package zaraza
&lt;/pre&gt;
&lt;p&gt;Se te solicitarán algunos datos (nombre del proyecto, autor,
licencia, etc.) y ¡(casi) listo! Estarás trabajando en tu proyecto
&lt;em&gt;zaraza&lt;/em&gt;. Tu prompt se verá así&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(zaraza)tin@morocha:~/proyectos/zaraza$
&lt;/pre&gt;
&lt;p&gt;¿Qué sucedió? Se creó un directorio &lt;tt class="docutils literal"&gt;~/proyectos/zaraza&lt;/tt&gt; para tu
proyecto, asociado a un virtualenv ubicado en &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.virtualenvs/zaraza&lt;/span&gt;&lt;/tt&gt;.
&lt;strong&gt;skeleton&lt;/strong&gt; automáticamente creó una estructura básica de
paquete python en &lt;tt class="docutils literal"&gt;~/proyectos/zaraza/src&lt;/tt&gt; incluyendo un &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt;
basado en &lt;em&gt;distribute&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Instalá tu paquete en el virtualenv, para poder importarlo desde
cualquier lado:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(zaraza) $ cd  ~/proyectos/zaraza/src
(zaraza) $ pip install -e .
&lt;/pre&gt;
&lt;p&gt;Esto agrega el directorio de desarrollo de tu proyecto al PYTHONPATH
del virtualenv, de modo que puedes importar &lt;em&gt;zaraza&lt;/em&gt; desde cualquier
lado dentro del virtualenv (por ejemplo, cuando hagas una carpeta
&lt;em&gt;src/test&lt;/em&gt; al nivel de '/src/zaraza'&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="y-ahora"&gt;
&lt;h2&gt;¿Y ahora?&lt;/h2&gt;
&lt;p&gt;Cada vez que quieras trabajar en tu proyecto &lt;em&gt;zaraza&lt;/em&gt; ejecutás:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ workon zaraza
&lt;/pre&gt;
&lt;p&gt;Para salir del virtualenv:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(zaraza) $ deactivate
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="algunos-tips-mas-a-modo-de-despedida"&gt;
&lt;h2&gt;Algunos tips más a modo de despedida&lt;/h2&gt;
&lt;p&gt;Virtualenwrapper es totalmente hookeable y extensible. Esta receta
propone usar &lt;em&gt;skeleton&lt;/em&gt; (que funciona como plugin de
&lt;a class="reference external" href="http://www.doughellmann.com/projects/virtualenvwrapper.project/"&gt;virtualenvwrapper.project&lt;/a&gt;)
para crear una estructura de paquete estándar básica, pero hay plugins
para proyectos más específicos. Por ejemplo
&lt;a class="reference external" href="http://www.doughellmann.com/projects/virtualenvwrapper.django/"&gt;virtualenwrapper.django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El comando &lt;tt class="docutils literal"&gt;mkproject&lt;/tt&gt; es un wrapper sobre el
comando principal de virtualenvwrapper &lt;tt class="docutils literal"&gt;mkvirtualenv&lt;/tt&gt;, que acepta muchos
parámetros opcionales. Ejecutá &lt;tt class="docutils literal"&gt;mkproject_help&lt;/tt&gt; o &lt;tt class="docutils literal"&gt;mkvirtualenv &lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt;
para saber más.&lt;/p&gt;
&lt;p&gt;Y ya sabés ...&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="http://python-distribute.org/pip_distribute.png" src="http://python-distribute.org/pip_distribute.png"&gt;
&lt;/div&gt;
&lt;hr class="docutils"&gt;
&lt;blockquote&gt;
Este artículo lo escribí originalmente para el &lt;a class="reference external" href="http://python.org.ar/pyar/Recetario"&gt;Recetario de PyAr&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>tutorial</category><guid>http://mgaitan.github.io/posts/creando-un-nuevo-proyecto-python.html</guid><pubDate>Mon, 12 Nov 2012 03:34:23 GMT</pubDate></item></channel></rss>